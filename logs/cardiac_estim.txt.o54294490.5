Starting optimizing for model ac-model with confidence max_class_probability-conf based on metric auc, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ac-model with confidence energy-conf based on metric auc, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ac-model with confidence entropy-conf based on metric auc, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ac-model with confidence doctor-conf based on metric auc, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence max_class_probability-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence max_class_probability-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Starting optimizing for model ts-model with confidence max_class_probability-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.06808961060316387, 1e-06), (0.06810834636076257, 0.0103897705078125), (0.06808961060316387, 1e-06)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.015349892558699896, 1e-06), (0.015351058897351888, 0.004827026367187488), (0.015349892558699896, 1e-06)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence energy-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.7928051245377481, array([0.06824875])), (nan, array([0.01])), (0.7928051245377481, array([0.06824875]))]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence energy-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.7928051245377481, array([0.06824875])), (nan, array([0.01])), (0.7928051245377481, array([0.06824875]))]
Starting optimizing for model ts-model with confidence energy-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.4575399630910677, 439804651111.351), (0.33898497407777806, 0.025500000000000023), (0.4575399630910677, 412316860420.75)]
Not satisfied with initial optimization results of param for class 2, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.32898063850982706, 1.0), (0.33770929126073823, 0.011000000000000001), (0.32898063850982706, 5.0)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.33266616263579396, 1.0), (0.36384895833353026, 0.01), (0.33266616263579396, 5.0)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence entropy-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence entropy-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Starting optimizing for model ts-model with confidence entropy-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.06386282382061492, 1e-06), (0.06387600906390667, 0.009645996093750001), (0.06386282382061492, 1e-06)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.014763583383311851, 1e-06), (0.014767402212837455, 0.0093216552734375), (0.014763583383311851, 1e-06)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence doctor-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence doctor-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Starting optimizing for model ts-model with confidence doctor-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.06128291803049746, 1e-06), (0.06130122250671688, 0.010430786132812501), (0.06128291803049746, 1e-06)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([5])]
Optimization results are [(0.014932431906291121, 1e-06), (0.014933576552093375, 0.0048420410156249875), (0.014932431906291121, 1e-06)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence max_class_probability-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence max_class_probability-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Starting optimizing for model doc-model with confidence max_class_probability-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.06919694692840861, 1.7500000000000018), (0.42118160908725133, 1e-06), (0.06919694692840861, 1.7250000000000005)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.01597036919256911, 1.7500000000000018), (0.4248422923686679, 1e-06), (0.01597036919256911, 1.6500000000000004)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence energy-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence energy-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Starting optimizing for model doc-model with confidence energy-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.08031592923135733, 2.1500000000000026), (0.49154100335791917, 0.01), (0.08031592923135733, 2.0250000000000012)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.017478774910064332, 2.1500000000000026), (0.4938849038077108, 0.01), (0.017478774910064332, 2.0250000000000012)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence entropy-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence entropy-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Starting optimizing for model doc-model with confidence entropy-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.06484317733231726, 2.1500000000000026), (0.3928495999165046, 1e-06), (0.06484317733231726, 1.8750000000000009)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.015422953376090343, 2.1500000000000026), (0.4033686012534742, 1e-06), (0.015422953376090343, 1.8750000000000009)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence doctor-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence doctor-conf based on metric accuracy, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Starting optimizing for model doc-model with confidence doctor-conf based on metric auc, class specific is True.
Opitimizing with 156 samples...
Be patient, it should take a while...
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.06276532455272243, 2.1500000000000026), (0.37859612357277894, 1e-06), (0.06276532455272243, 2.0250000000000012)]
Not satisfied with initial optimization results of param for class 1, trying more initial states...
Tried 1/2 times.
Tried 2/2 times.
Starting from [array([0.01]), array([1.5])]
Optimization results are [(0.015712176326986294, 2.1500000000000026), (0.3977810578957093, 1e-06), (0.015719519351032996, 1.6415637016296392)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence max_class_probability-conf based on metric auc, class specific is False.
Opitimizing with 156 samples...
Be patient, it should take a while...
Calculating and saving the fitted case-wise performance...
