Starting optimizing for model ac-model with confidence max_class_probability-conf based on metric accuracy, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ac-model with confidence energy-conf based on metric accuracy, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ac-model with confidence entropy-conf based on metric accuracy, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ac-model with confidence doctor-conf based on metric accuracy, class specific is False.
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence max_class_probability-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence max_class_probability-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence energy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence energy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence entropy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence entropy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence doctor-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-model with confidence doctor-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence max_class_probability-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence max_class_probability-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence energy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence energy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence entropy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence entropy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence doctor-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model doc-model with confidence doctor-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence max_class_probability-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence max_class_probability-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence energy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence energy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Not satisfied with initial optimization results of param for class 0, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.17143013]), array([0.27296527]), array([0.31703]), array([0.36177197]), array([0.47067223])]
Optimization results are [(0.4862236620968822, 1.0), (7.880448515962257e-10, 0.3192886241130855), (7.880448515962257e-10, 0.31945466428758573), (7.880448515962257e-10, 0.31950680110643864), (7.880448515962257e-10, 0.3193768144321686), (7.880448515962257e-10, 0.3195423188055555)]
Not satisfied with initial optimization results of param for class 3, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.1312902]), array([0.19434214]), array([0.23425508]), array([0.2726655]), array([0.3760092])]
Optimization results are [(0.5714285700449672, 1.0), (1.3836042311865526e-09, 0.20267925202862616), (0.002421306122448952, 0.20405924384862656), (0.002421306122448952, 0.20497319534640318), (0.002421306122448952, 0.20449912350194238), (0.002421306122448952, 0.20445500198010358)]
Not satisfied with initial optimization results of param for class 2, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.14268444]), array([0.21264859]), array([0.25070392]), array([0.30782736]), array([0.42353459])]
Optimization results are [(0.670129868389273, 1.0), (1.7405971108885865e-09, 0.18103088762701902), (1.7405971108885865e-09, 0.18075130285955804), (1.7405971108885865e-09, 0.1809768919750912), (1.7405971108885865e-09, 0.18084857151766737), (1.7405971108885865e-09, 0.18132574576741878)]
Not satisfied with initial optimization results of param for class 4, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.15570676]), array([0.2282862]), array([0.26694567]), array([0.30707295]), array([0.4097577])]
Optimization results are [(0.7941176444636678, 1.0), (2.5951556459347103e-09, 0.15765309561704544), (2.5951556459347103e-09, 0.15694676540752522), (2.5951556459347103e-09, 0.1568305830958353), (2.5951556459347103e-09, 0.1573748861879394), (2.5951556459347103e-09, 0.15622012226020274)]
Not satisfied with initial optimization results of param for class 5, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.17290538]), array([0.26216701]), array([0.29219615]), array([0.33566337]), array([0.45378381])]
Optimization results are [(0.7924528264506943, 1.0), (3.737985032614688e-09, 0.17398604236720827), (3.737985032614688e-09, 0.1736856464042405), (3.737985032614688e-09, 0.17349146621902461), (3.737985032614688e-09, 0.1741253743286278), (3.737985032614688e-09, 0.17442315282355011)]
Not satisfied with initial optimization results of param for class 6, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.16263961]), array([0.24824956]), array([0.2908194]), array([0.32086466]), array([0.43689468])]
Optimization results are [(0.942857138367347, 1.0), (4.48979586842313e-09, 0.0894517881836741), (4.48979586842313e-09, 0.08999046636894958), (4.48979586842313e-09, 0.09088106338147955), (4.48979586842313e-09, 0.09024318688691552), (0.05714286163265303, 1e-06)]
Not satisfied with initial optimization results of param for class 7, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.16206185]), array([0.21592219]), array([0.25864847]), array([0.32358518]), array([0.46319169])]
Optimization results are [(0.9354838659382588, 1.0), (5.029483052254591e-09, 0.0769793782403973), (5.029483052254591e-09, 0.07557276639776697), (5.029483052254591e-09, 0.07597798779328097), (5.029483052254591e-09, 0.07685147938300693), (0.06451613406174117, 1e-06)]
Not satisfied with initial optimization results of param for class 9, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.26513562]), array([0.3581884]), array([0.39548691]), array([0.43165697]), array([0.56801792])]
Optimization results are [(0.028776985404482147, 1e-06), (6.9872159169648285e-09, 0.10605424628021298), (6.9872159169648285e-09, 0.10745651996571215), (0.007194237617100585, 0.11864607175818342), (6.9872159169648285e-09, 0.10791424274377606), (0.028776985404482147, 1e-06)]
Not satisfied with initial optimization results of param for class 8, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.17925974]), array([0.2795636]), array([0.31812603]), array([0.3625518]), array([0.49186783])]
Optimization results are [(0.9365079290753339, 1.0), (0.11904761161501642, 0.17029675534233205), (7.4326026444637705e-09, 0.09784726171146077), (7.4326026444637705e-09, 0.0954378091157696), (7.4326026444637705e-09, 0.09970174452540774), (0.06349207092466613, 1e-06)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence entropy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence entropy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence doctor-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model atc-model with confidence doctor-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence max_class_probability-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence max_class_probability-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Not satisfied with initial optimization results of param_ext for class 0, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.30222363]), array([0.4084352]), array([0.46322339]), array([0.52665208]), array([0.6744988])]
Optimization results are [(0.4862236620968822, 1.0), (7.880448515962257e-10, 0.47316886497044397), (7.880448515962257e-10, 0.4735295571911073), (7.880448515962257e-10, 0.4733564067255819), (7.880448515962257e-10, 0.47316397409873445), (7.880448515962257e-10, 0.4732030632596845)]
Not satisfied with initial optimization results of param_ext for class 7, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.91088645]), array([0.9897763]), array([0.99863803]), array([0.9996741]), array([0.99999748])]
Optimization results are [(0.010752683142559949, 0.6999999999999997), (0.010752683142559949, 0.7287091603363514), (0.010752683142559949, 0.6928434088453912), (0.010752683142559949, 0.6990466228494487), (0.010752683142559949, 0.6997718689328198), (0.010752683142559949, 0.6999982389515917)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence energy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Not satisfied with initial optimization results of param_ext, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.65012612]), array([0.6712105]), array([0.68370575]), array([0.69808]), array([0.74100498])]
Optimization results are [(0.29866666666666664, array([0.5])), (0.0, array([0.66047481])), (0.0, array([0.66046065])), (0.0, array([0.66047044])), (0.0, array([0.66044913])), (0.0, array([0.6604641]))]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence energy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Not satisfied with initial optimization results of param_ext for class 0, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.41342085]), array([0.45149231]), array([0.47076621]), array([0.49142756]), array([0.54909127])]
Optimization results are [(0.4862236620968822, 1.0), (7.880448515962257e-10, 0.47285009401706685), (7.880448515962257e-10, 0.47336147252750627), (7.880448515962257e-10, 0.4729729297754883), (7.880448515962257e-10, 0.4729990240481934), (7.880448515962257e-10, 0.4731622394914274)]
Not satisfied with initial optimization results of param_ext for class 3, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.52545066]), array([0.54417219]), array([0.55689004]), array([0.57098381]), array([0.60956129])]
Optimization results are [(0.5714285700449672, 1.0), (1.3836042311865526e-09, 0.5459760805844076), (1.3836042311865526e-09, 0.5458727258581478), (1.3836042311865526e-09, 0.5460132783434123), (1.3836042311865526e-09, 0.5460032695343866), (1.3836042311865526e-09, 0.5459859566004854)]
Not satisfied with initial optimization results of param_ext for class 2, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.62984782]), array([0.64601525]), array([0.65531042]), array([0.67034055]), array([0.7035305])]
Optimization results are [(0.329870131610727, 0.49999999999999956), (1.7405971108885865e-09, 0.639197127120934), (1.7405971108885865e-09, 0.6392018120641414), (1.7405971108885865e-09, 0.6391836377689939), (1.7405971108885865e-09, 0.639180190584623), (1.7405971108885865e-09, 0.6392234192949994)]
Not satisfied with initial optimization results of param_ext for class 4, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.76221984]), array([0.77609862]), array([0.78354673]), array([0.79145089]), array([0.81959068])]
Optimization results are [(0.7941176444636678, 1.0), (2.5951556459347103e-09, 0.763261937492685), (2.5951556459347103e-09, 0.7633657474437024), (2.5951556459347103e-09, 0.7633459193978318), (2.5951556459347103e-09, 0.7633172882421275), (0.0032679712610534928, 0.7635639779024797)]
Not satisfied with initial optimization results of param_ext for class 7, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.90536844]), array([0.91847897]), array([0.92748859]), array([0.93873769]), array([0.9709607])]
Optimization results are [(0.06451613406174117, 0.7999999999999998), (0.06451613406174117, 0.8601000176756655), (5.029483052254591e-09, 0.8938127907982799), (5.029483052254591e-09, 0.893794670180217), (5.029483052254591e-09, 0.8938176241698164), (5.029483052254591e-09, 0.8938717320436915)]
Not satisfied with initial optimization results of param_ext for class 8, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.89976927]), array([0.91978954]), array([0.92987641]), array([0.94279669]), array([0.97146352])]
Optimization results are [(0.06349207092466613, 0.7999999999999998), (0.06349207092466613, 0.8547808087398711), (7.4326026444637705e-09, 0.8887107129374618), (7.4326026444637705e-09, 0.8888310859148546), (7.4326026444637705e-09, 0.8886595329630405), (7.4326026444637705e-09, 0.8887373279116919)]
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence entropy-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence entropy-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence doctor-conf based on metric accuracy, class specific is False.
Opitimizing with 3000 samples...
Calculating and saving the fitted case-wise performance...
Starting optimizing for model ts-atc-model with confidence doctor-conf based on metric accuracy, class specific is True.
Opitimizing with 3000 samples...
Not satisfied with initial optimization results of param_ext for class 9, trying more initial states...
Tried 1/5 times.
Tried 2/5 times.
Tried 3/5 times.
Tried 4/5 times.
Tried 5/5 times.
Starting from [array([0.96982096]), array([0.99994509]), array([0.99999444]), array([0.99999941]), array([0.99999975])]
Optimization results are [(0.028776985404482147, 0.6999999999999997), (6.9872159169648285e-09, 0.7622186637721056), (0.028776985404482147, 0.6999615605901837), (0.028776985404482147, 0.6999961107244987), (0.028776985404482147, 0.6999995865706914), (0.028776985404482147, 0.699999826426492)]
Calculating and saving the fitted case-wise performance...
